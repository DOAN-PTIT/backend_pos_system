// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Gender {
  MALE
  FEMALE
  OTHER
}

model User {
  id            Int     @id @default(autoincrement())
  email         String  @unique
  name          String
  password      String
  avatar        String?
  language      String?
  phone_number  String?
  fb_id         String?
  access_token  String?
  date_of_birth DateTime?
  role          String @default("user")
  updatedAt     DateTime? @updatedAt @default(now()) @db.Timestamptz(6)
  createdAt     DateTime? @default(now()) @db.Timestamptz(6)
  shopusers     ShopUser[]
}

model Shop {
  id            Int     @id @default(autoincrement())
  name          String
  avatar        String
  currency      String @default("VND")
  description   String?
  fb_shop_id    String?
  updatedAt     DateTime @updatedAt @default(now()) @db.Timestamptz(6)
  createdAt     DateTime @default(now()) @db.Timestamptz(6)
  shopusers     ShopUser[]
  promotions    Promotion[]
  products      Product[]
  shopsetting   ShopSetting?
  shopcustomers ShopCustomer[]
  orders        Order[]
}

model ShopSetting {
  id            Int     @id @default(autoincrement())
  date_format   String
  location      String
  language      String
  time_zone     String  @default("Asia/Ho_Chi_Minh")
  auto_product_code Boolean @default(false)
  source_order  String?
  updatedAt     DateTime @updatedAt @default(now()) @db.Timestamptz(6)
  createdAt     DateTime @default(now()) @db.Timestamptz(6)
  shop_id       Int @unique
  shop          Shop @relation(fields: [shop_id], references: [id], onDelete: Cascade)
}

model ShopUser {
  id            Int     @id @default(autoincrement())
  role          String @default("admin")
  createdAt     DateTime @default(now()) @db.Timestamptz(6)
  user_id       Int
  shop_id       Int
  user          User @relation(fields: [user_id], references: [id], onDelete: Cascade)
  shop          Shop @relation(fields: [shop_id], references: [id], onDelete: Cascade)
  orders         Order[]
}

model Product {
  id            Int     @id @default(autoincrement())
  name          String
  description   String?
  note          String?
  product_code  String @unique
  updatedAt     DateTime @updatedAt @default(now()) @db.Timestamptz(6)
  createdAt     DateTime @default(now())@db.Timestamptz(6)
  variations    Variation[]
  promotionitems PromotionItem[]
  orderitems    OrderItem[]
  shop_id       Int
  shop          Shop @relation(fields: [shop_id], references: [id], onDelete: Cascade)
  categories_id Int?
  categories    Categories? @relation(fields: [categories_id], references: [id], onDelete: Cascade)
}

model Categories {
  id            Int     @id @default(autoincrement())
  name          String
  description   String
  updatedAt     DateTime @updatedAt @default(now()) @db.Timestamptz(6)
  createdAt     DateTime @default(now())@db.Timestamptz(6)
  products      Product[]
}

model Variation {
  id            Int     @id @default(autoincrement())
  retail_price  Int
  image         String
  amount        Int
  barcode       String  @unique
  variation_code  String  @unique
  price_at_counter  Int
  updatedAt     DateTime @updatedAt @default(now()) @db.Timestamptz(6)
  createdAt     DateTime @default(now()) @db.Timestamptz(6)
  product_id    Int 
  product       Product @relation(fields: [product_id], references: [id], onDelete: Cascade)
  orderitems    OrderItem[]
}

model Promotion {
  id            Int     @id @default(autoincrement())
  value         Int
  name          Int
  start_date    DateTime
  due_date      DateTime
  is_discount_percent Int
  updatedAt     DateTime @updatedAt @default(now()) @db.Timestamptz(6)
  createdAt     DateTime @default(now()) @db.Timestamptz(6)
  promotionitems PromotionItem[]
  shop_id       Int
  shop          Shop @relation(fields: [shop_id], references: [id], onDelete: Cascade)
}

model Order {
  id            Int     @id @default(autoincrement())
  note          String?
  status        Int
  delivery_cost_shop Int?
  discount_percent Int?
  paid          Int?
  total_cost    Int
  estimated_delivery DateTime @db.Date
  recipient_name String
  recipient_phone_number String
  delivery_address String
  delivery_company String
  tracking_number String?
  delivery_cost Int?
  surcharge     Int?
  updatedAt     DateTime @updatedAt @default(now()) @db.Timestamptz(6)
  createdAt     DateTime @default(now()) @db.Timestamptz(6)
  orderitems    OrderItem[]
  customer_id   Int
  customer      Customer @relation(fields: [customer_id], references: [id], onDelete: Cascade)
  shopuser_id   Int
  shopuser      ShopUser @relation(fields: [shopuser_id], references: [id], onDelete: Cascade)
  shop_id       Int
  shop          Shop @relation(fields: [shop_id], references: [id], onDelete: Cascade)
}

model OrderItem {
  id            Int     @id @default(autoincrement())
  quantity      Int
  note          String?
  createdAt     DateTime @default(now()) @db.Timestamptz(6)
  product_id    Int
  product       Product @relation(fields: [product_id], references: [id], onDelete: Cascade)
  variation_id  Int
  variation     Variation @relation(fields: [variation_id], references: [id], onDelete: Cascade)
  order_id      Int
  order         Order @relation(fields: [order_id], references: [id], onDelete: Cascade)
}

model Customer {
  id            Int     @id @default(autoincrement())
  name          String
  email         String  @unique
  gender        Gender
  address       String?
  phone_number  String
  date_of_birth DateTime? @db.Date
  last_purchase DateTime? @db.Date
  updatedAt     DateTime @updatedAt @default(now()) @db.Timestamptz(6)
  createdAt     DateTime @default(now()) @db.Timestamptz(6)
  orders        Order[]
  shopcustomers ShopCustomer[]
}

model ShopCustomer {
  id            Int     @id @default(autoincrement())
  updatedAt     DateTime @updatedAt @default(now()) @db.Timestamptz(6)
  createdAt     DateTime @default(now()) @db.Timestamptz(6)
  shop_id       Int
  shop          Shop @relation(fields: [shop_id], references: [id], onDelete: Cascade)
  customer_id   Int
  customer      Customer @relation(fields: [customer_id], references: [id], onDelete: Cascade)
}

model PromotionItem {
  id            Int     @id @default(autoincrement())
  createdAt     DateTime @default(now()) @db.Timestamptz(6)
  product_id    Int
  product       Product @relation(fields: [product_id], references: [id], onDelete: Cascade)
  promotion_id  Int
  promotion     Promotion @relation(fields: [promotion_id], references: [id], onDelete: Cascade)
}